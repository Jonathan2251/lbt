Work on llvm f28c006a5895fc0e329fe15fead81e37457cb1d1 of 14.x

install:
  ~/git/lbt/exlbt/clang-tools$ cp -rf loop-convert ~/llvm/14.x/llvm-project/clang-tools-extra/.
  echo 'add_subdirectory(loop-convert)' >> ~/llvm/14.x/llvm-project/clang-tools-extra/CMakeLists.txt

build:
  ~/llvm/14.x/llvm-project/build$ ninja
run:
  ~/git/lbt/exlbt/clang-tools$ ~/llvm/14.x/llvm-project/build/bin/loop-convert loop-test.cpp --
  ForStmt 0x55a5ed752688
  |-DeclStmt 0x55a5ed7524d8
  | `-VarDecl 0x55a5ed752450  used i 'int' cinit
  |   `-IntegerLiteral 0x55a5ed7524b8 'int' 0
  |-<<<NULL>>>
  |-BinaryOperator 0x55a5ed752548 '_Bool' '<'
  | |-ImplicitCastExpr 0x55a5ed752530 'int' <LValueToRValue>
  | | `-DeclRefExpr 0x55a5ed7524f0 'int' lvalue Var 0x55a5ed752450 'i' 'int'
  | `-IntegerLiteral 0x55a5ed752510 'int' 100
  |-UnaryOperator 0x55a5ed752588 'int' postfix '++'
  | `-DeclRefExpr 0x55a5ed752568 'int' lvalue Var 0x55a5ed752450 'i' 'int'
  `-CompoundStmt 0x55a5ed752670
    `-BinaryOperator 0x55a5ed752650 'int' lvalue '='
      |-DeclRefExpr 0x55a5ed7525a0 'int' lvalue Var 0x55a5ed752398 'res' 'int'
      `-BinaryOperator 0x55a5ed752630 'int' '+'
        |-ImplicitCastExpr 0x55a5ed752600 'int' <LValueToRValue>
        | `-DeclRefExpr 0x55a5ed7525c0 'int' lvalue Var 0x55a5ed752398 'res' 'int'
        `-ImplicitCastExpr 0x55a5ed752618 'int' <LValueToRValue>
          `-DeclRefExpr 0x55a5ed7525e0 'int' lvalue Var 0x55a5ed752450 'i' 'int'

